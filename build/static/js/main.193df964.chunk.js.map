{"version":3,"sources":["store/action/userInfo.ts","store/action/loading.ts","pages/notFound.tsx","pages sync /.tsx$","pages/home.tsx","pages/login.tsx","pages/logout.tsx","pages/peopleList/index.tsx","pages/peopleList/peopleDetail.tsx","pages/user.tsx","common/tools.ts","components/Router.tsx","components/Nav.tsx","components/Breadcrumb.tsx","App.tsx","components/Loading.tsx","store/reducers/userInfo.ts","store/reducers/loading.ts","store/reducers/index.ts","store/index.tsx","index.tsx","components/Cat.tsx","pages/typescript.tsx","store/types.ts"],"names":["updateUserInfo","userName","dispatch","a","type","START_LOADING","Promise","resolve","setTimeout","UPDATE_USER_INFO","END_LOADING","NotFound","title","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","module","exports","Home","href","Login","useDispatch","useState","setUserName","value","onChange","ev","target","onClick","mustLogout","Logout","mustLogin","People","PeopleDetail","User","userInfo","useSelector","state","pageInfoList","context","require","filePaths","Components","item","default","filePath","index","path","slice","replace","Component","Router","from","to","exact","length","page","key","pathname","component","Nav","activeClassName","Breadcrumb","breadcrumbList","currentPage","find","pageInfo","breadcrumbPaths","push","reverse","getBreadcrumbList","useLocation","style","textDecorationLine","App","className","Loading","loading","show","initState","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","Cat","props","name","age","TypeScript"],"mappings":"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","file":"static/js/main.193df964.chunk.js","sourcesContent":["import { Dispatch } from 'redux'\r\n\r\nimport {\r\n  UPDATE_USER_INFO\r\n} from '~src/store/types'\r\nimport { startLoading, endLoading } from '~src/store/action/loading'\r\n\r\nexport function updateUserInfo (userName: string) {\r\n  return async (dispatch: Dispatch): Promise<void> => {\r\n    dispatch(startLoading())\r\n    await new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve()\r\n      }, 500)\r\n    })\r\n    dispatch({ type: UPDATE_USER_INFO, userName })\r\n    dispatch(endLoading())\r\n  }\r\n}\r\n","\r\nimport {\r\n  START_LOADING,\r\n  END_LOADING\r\n} from '~src/store/types'\r\n\r\nimport { LoadingAction } from '~src/interface/store'\r\n\r\nexport function startLoading (): LoadingAction {\r\n  return { type: START_LOADING }\r\n}\r\n\r\nexport function endLoading (): LoadingAction {\r\n  return { type: END_LOADING }\r\n}\r\n","import React from 'react'\n\nimport { Page } from '~src/interface/common'\n\nconst NotFound: Page = () => {\n  return (\n    <article>\n      404\n    </article>\n  )\n}\n\nNotFound.title = '404'\n\nexport default NotFound\n","var map = {\n\t\"./home.tsx\": 40,\n\t\"./login.tsx\": 41,\n\t\"./logout.tsx\": 48,\n\t\"./notFound.tsx\": 20,\n\t\"./peopleList/index.tsx\": 49,\n\t\"./peopleList/peopleDetail.tsx\": 50,\n\t\"./typescript.tsx\": 57,\n\t\"./user.tsx\": 51\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","import React from 'react'\n\nimport { Page } from '~src/interface/common'\n\nconst Home: Page = () => {\n  return (\n    <article>\n      <a href=\"/aaaaa\">asd</a>\n    </article>\n  )\n}\n\nHome.title = '首页'\n\nexport default Home\n","import React, { useState, ChangeEvent } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { updateUserInfo } from '~src/store/action/userInfo'\nimport { Page } from '~src/interface/common'\n\nconst Login: Page = () => {\n  const dispatch = useDispatch()\n  const [userName, setUserName] = useState('')\n\n  const onChangeUserName = (ev: ChangeEvent): void => {\n    setUserName((ev.target as HTMLInputElement).value)\n  }\n  const onClickLogin = (): void => {\n    dispatch(updateUserInfo(userName))\n  }\n  return (\n    <article>\n      用户名: <input value={userName} onChange={onChangeUserName} />\n      <button onClick={onClickLogin}>登录</button>\n      <style jsx>{`\n        button {\n          margin-left: 10px;\n        }\n      `}</style>\n    </article>\n  )\n}\n\nLogin.mustLogout = true\nLogin.title = '登录'\n\nexport default Login\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { updateUserInfo } from '~src/store/action/userInfo'\nimport { Page } from '~src/interface/common'\n\nconst Logout: Page = () => {\n  const dispatch = useDispatch()\n\n  const onClickLogout = (): void => {\n    dispatch(updateUserInfo(''))\n  }\n  return (\n    <article>\n      <button onClick={onClickLogout}>登出</button>\n    </article>\n  )\n}\n\nLogout.mustLogin = true\nLogout.title = '登出'\n\nexport default Logout\n","import React from 'react'\n\nimport { Page } from '~src/interface/common'\n\nconst People: Page = () => {\n  return (\n    <article>\n      People\n    </article>\n  )\n}\n\nPeople.title = '人类列表'\n\nexport default People\n","import React from 'react'\n\nimport { Page } from '~src/interface/common'\n\nconst PeopleDetail: Page = () => {\n  return (\n    <article>\n      PeopleDetail\n    </article>\n  )\n}\n\nPeopleDetail.title = '人类详情'\n\nexport default PeopleDetail\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Page } from '~src/interface/common'\nimport { State } from '~src/interface/store'\n\nconst User: Page = () => {\n  const userInfo = useSelector((state: State) => state.userInfo)\n  return (\n    <article>\n      当前用户为: {userInfo.userName}\n    </article>\n  )\n}\n\nUser.mustLogin = true\nUser.title = '用户中心'\n\nexport default User\n","\nimport { PageInfo, BreadcrumbPage, WebpackFileModule } from '~src/interface/common'\n\n// 根据 ~src/pages 目录，返回 pages 路由信息\nexport const pageInfoList = ((): PageInfo[] => {\n  const context = require.context('~src/pages', true, /.tsx$/)\n  const filePaths = context.keys()\n  const Components = (filePaths.map(context) as WebpackFileModule[])\n    .map((item) => item.default)\n  const pageInfoList = filePaths.map((filePath, index) => {\n    const path = filePath.slice(1, -4).replace(/\\/index$/, '')\n    const Component = Components[index]\n    return { path, Component }\n  })\n  return pageInfoList\n})()\n\n// 根据 pathname 获取面包屑列表\nexport function getBreadcrumbList (pathname: string): BreadcrumbPage[] {\n  const currentPage = pageInfoList.find(pageInfo => pageInfo.path === pathname)\n  if (!currentPage) return []\n  const breadcrumbPaths: string[] = []\n  currentPage.path.replace(/\\/\\w+/g, (path: string, index: number): string => {\n    if (index === 0) {\n      breadcrumbPaths.push(currentPage.path.slice(0))\n    } else {\n      breadcrumbPaths.push(currentPage.path.slice(0, index))\n    }\n    return path\n  })\n  const breadcrumbPages = breadcrumbPaths\n    .reverse()\n    .map(path => pageInfoList.find(pageInfo => pageInfo.path === path) as PageInfo)\n    .map((page: PageInfo) => ({\n      path: page.path,\n      title: page.Component.title\n    }))\n  return breadcrumbPages\n}\n","import React, { FunctionComponent } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { pageInfoList } from '~src/common/tools'\nimport NotFound from '~src/pages/notFound'\nimport { State } from '~src/interface/store'\n\nconst Router: FunctionComponent = () => {\n  const userInfo = useSelector((state: State) => state.userInfo)\n\n  return (\n    <Switch>\n      <Redirect from=\"/\" to=\"/home\" exact />\n      {\n        pageInfoList.length && pageInfoList.map(page => {\n          const { mustLogin, mustLogout } = page.Component\n          const { path, Component } = page\n          if (mustLogin) {\n            if (userInfo.userName) {\n              return (\n                <Route\n                  key={path}\n                  path={path}\n                  exact>\n                  <Component />\n                </Route>\n              )\n            }\n            return (\n              <Redirect\n                from={path}\n                key={path}\n                to={{ pathname: '/login' }}\n              />\n            )\n          }\n\n          if (mustLogout) {\n            if (userInfo.userName) {\n              return (\n                <Redirect\n                  from={path}\n                  key={path}\n                  to={{ pathname: '/home' }}\n                />\n              )\n            }\n            return (\n              <Route\n                key={path}\n                path={path}\n                exact>\n                <Component />\n              </Route>\n            )\n          }\n          return (\n            <Route\n              key={path}\n              path={path}\n              exact>\n              <Component />\n            </Route>\n          )\n        })\n      }\n      <Route path=\"*\" component={NotFound} exact />\n    </Switch>\n  )\n}\n\nexport default Router\n","import React, { FunctionComponent } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Nav: FunctionComponent = () => {\n  return (\n    <nav>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/home\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          home\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/user\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          user\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/login\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          login\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/logout\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          logout\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/peopleList\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          peopleList\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/peopleList/peopleDetail\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          peopleDetail\n        </NavLink>\n      </span>\n      <span className=\"nav__item\">\n        <NavLink\n          to=\"/typescript\"\n          activeClassName=\"nav__item--active\"\n          exact>\n          typescript\n        </NavLink>\n      </span>\n      <style jsx>{`\n        .nav__item {\n          padding-left: 30px;\n        }\n      `}</style>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\nimport { getBreadcrumbList } from '~src/common/tools.ts'\n\nconst Breadcrumb = (): JSX.Element => {\n  const location = useLocation()\n  const breadcrumbList = getBreadcrumbList(location.pathname)\n  return (\n    <article>\n      <NavLink\n        style={{ textDecorationLine: 'none' }}\n        to={{ pathname: '/' }}>\n        首页\n      </NavLink>\n      &nbsp;/&nbsp;\n      {\n        breadcrumbList.map((item, index) => {\n          if (index === breadcrumbList.length - 1) {\n            return (\n              <span key={index}>{item.title}</span>\n            )\n          }\n          return (\n            <span key={index}>\n              <NavLink\n                style={{ textDecorationLine: 'none' }}\n                to={{ pathname: item.path }}>\n                {item.title}\n              </NavLink>\n              &nbsp;/&nbsp;\n            </span>\n          )\n        })\n      }\n    </article>\n  )\n}\n\nexport default Breadcrumb\n","import React from 'react'\n\nimport Router from '~src/components/Router'\nimport Nav from '~src/components/Nav'\nimport Breadcrumb from '~src/components/Breadcrumb'\nimport '~src/public.scss'\n\nconst App = (): JSX.Element => {\n  return (\n    <article className=\"App\">\n      <Nav />\n      <hr />\n      <Breadcrumb />\n      <Router />\n    </article>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { State } from '~src/interface/store'\n\nconst Loading = (): JSX.Element => {\n  const loading = useSelector((state: State) => state.loading)\n\n  return (\n    <article>\n      {\n        loading.show ? (\n          <div className=\"loading\">\n            请稍等...\n          </div>\n        ) : ''\n      }\n      <style jsx>{`\n        .loading {\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 100vw;\n          height: 100vh;\n          background: rgba(0,0,0,0.5);\n          z-index: 100;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: #fff;\n        }\n      `}</style>\n    </article>\n  )\n}\n\nexport default Loading\n","\r\nimport {\r\n  UPDATE_USER_INFO\r\n} from '~src/store/types'\r\nimport { UserInfoAction, UserInfoState } from '~src/interface/store'\r\n\r\nconst initState = {\r\n  userName: ''\r\n}\r\n\r\nexport default function (state: UserInfoState = initState, action: UserInfoAction): UserInfoState {\r\n  switch (action.type) {\r\n    case UPDATE_USER_INFO:\r\n      return {\r\n        ...state,\r\n        userName: action.userName\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","\nimport {\n  START_LOADING,\n  END_LOADING\n} from '~src/store/types'\nimport { LoadingAction, LoadingState } from '~src/interface/store'\n\nconst initState = {\n  show: false\n}\n\nexport default function (state: LoadingState = initState, action: LoadingAction): LoadingState {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, show: true }\n    case END_LOADING:\n      return { ...state, show: false }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport userInfo from '~src/store/reducers/userInfo'\nimport loading from '~src/store/reducers/loading'\n\nexport default combineReducers({\n  userInfo,\n  loading\n})\n","import { applyMiddleware, createStore, Store } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport reducers from '~src/store/reducers'\r\n\r\nlet store: Store\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const logger = createLogger({ collapsed: true })\r\n  store = createStore(\r\n    reducers,\r\n    composeWithDevTools(applyMiddleware(reduxThunk, logger))\r\n  )\r\n  if (module.hot) {\r\n    module.hot.accept('./reducers', () => {\r\n      store.replaceReducer(reducers)\r\n    })\r\n  }\r\n} else {\r\n  store = createStore(\r\n    reducers,\r\n    applyMiddleware(reduxThunk)\r\n  )\r\n}\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from '~src/App'\nimport Loading from '~src/components/Loading'\nimport store from '~src/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      <Loading />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import React from 'react'\n\nconst Cat = (props: { name: string; age: number }): JSX.Element => {\n  return (\n    <article>\n      <p>name: {props.name}</p>\n      <p>age: {props.age}</p>\n    </article>\n  )\n}\n\nexport default Cat\n","import React from 'react'\r\n\r\nimport Cat from '~src/components/Cat.tsx'\r\nimport { Page } from '~src/interface/common'\r\n\r\nconst TypeScript: Page = () => {\r\n  return (\r\n    <article>\r\n      <Cat name=\"mimi\" age={3} />\r\n    </article>\r\n  )\r\n}\r\n\r\nTypeScript.title = 'TS'\r\n\r\nexport default TypeScript\r\n","\r\nexport const START_LOADING = 'START_LOADING'\r\nexport const END_LOADING = 'END_LOADING'\r\n\r\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO'\r\n"],"sourceRoot":""}